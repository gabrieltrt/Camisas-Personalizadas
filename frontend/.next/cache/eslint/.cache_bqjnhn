[{"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\api\\index.ts":"1","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\Layout.tsx":"2","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\Popups.tsx":"3","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\ResizableImage.tsx":"4","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\CartContext.ts":"5","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\index.ts":"6","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\LoaderContext.ts":"7","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\ModalContext.ts":"8","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\PopupContext.ts":"9","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\SimulatorContext.ts":"10","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\components\\Dropzone.tsx":"11","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\components\\Footer.tsx":"12","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\components\\Header.tsx":"13","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\CartItem.ts":"14","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Image.ts":"15","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\index.ts":"16","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Popup.ts":"17","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Simulator.ts":"18","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Template.ts":"19","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Cart\\components\\CartModal.tsx":"20","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Cart\\components\\Form.tsx":"21","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\index\\components\\Depositions.tsx":"22","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\index\\components\\Landing.tsx":"23","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\index\\components\\Statistics.tsx":"24","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\Colors.tsx":"25","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\ImageUpload.tsx":"26","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\Menu.tsx":"27","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\Templates.tsx":"28","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\UploadConfirmationModal.tsx":"29","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Simulador\\components\\ResetChangesModal.tsx":"30","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Simulador\\components\\TemplateContainer.tsx":"31","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\contato.tsx":"32","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\index.tsx":"33","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\produtos.tsx":"34","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\simulador.tsx":"35","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\_app.tsx":"36","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\utils\\index.ts":"37","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\Dropdown.tsx":"38"},{"size":804,"mtime":1671707010943,"results":"39","hashOfConfig":"40"},{"size":861,"mtime":1670695792313,"results":"41","hashOfConfig":"40"},{"size":2071,"mtime":1671583125994,"results":"42","hashOfConfig":"40"},{"size":4441,"mtime":1671583735710,"results":"43","hashOfConfig":"40"},{"size":270,"mtime":1671584442731,"results":"44","hashOfConfig":"40"},{"size":340,"mtime":1670673021856,"results":"45","hashOfConfig":"40"},{"size":269,"mtime":1670545438032,"results":"46","hashOfConfig":"40"},{"size":331,"mtime":1671585527979,"results":"47","hashOfConfig":"40"},{"size":329,"mtime":1670539913876,"results":"48","hashOfConfig":"40"},{"size":617,"mtime":1671584119120,"results":"49","hashOfConfig":"40"},{"size":1341,"mtime":1671627586016,"results":"50","hashOfConfig":"40"},{"size":1261,"mtime":1671672249500,"results":"51","hashOfConfig":"40"},{"size":3110,"mtime":1671589284632,"results":"52","hashOfConfig":"40"},{"size":153,"mtime":1671584321903,"results":"53","hashOfConfig":"40"},{"size":135,"mtime":1670372130525,"results":"54","hashOfConfig":"40"},{"size":232,"mtime":1671585465179,"results":"55","hashOfConfig":"40"},{"size":73,"mtime":1670539766835,"results":"56","hashOfConfig":"40"},{"size":735,"mtime":1671585347455,"results":"57","hashOfConfig":"40"},{"size":210,"mtime":1670437533400,"results":"58","hashOfConfig":"40"},{"size":6330,"mtime":1671715347345,"results":"59","hashOfConfig":"40"},{"size":10620,"mtime":1671712455885,"results":"60","hashOfConfig":"40"},{"size":3272,"mtime":1671669849805,"results":"61","hashOfConfig":"40"},{"size":7450,"mtime":1671671163583,"results":"62","hashOfConfig":"40"},{"size":735,"mtime":1671711423261,"results":"63","hashOfConfig":"40"},{"size":3035,"mtime":1671586989270,"results":"64","hashOfConfig":"40"},{"size":2451,"mtime":1671627732515,"results":"65","hashOfConfig":"40"},{"size":8411,"mtime":1671645135900,"results":"66","hashOfConfig":"40"},{"size":1612,"mtime":1671587052921,"results":"67","hashOfConfig":"40"},{"size":1590,"mtime":1670696069966,"results":"68","hashOfConfig":"40"},{"size":1389,"mtime":1670695962482,"results":"69","hashOfConfig":"40"},{"size":6033,"mtime":1671672597766,"results":"70","hashOfConfig":"40"},{"size":4964,"mtime":1671589793122,"results":"71","hashOfConfig":"40"},{"size":553,"mtime":1671707225508,"results":"72","hashOfConfig":"40"},{"size":4329,"mtime":1671591964098,"results":"73","hashOfConfig":"40"},{"size":1375,"mtime":1671585100208,"results":"74","hashOfConfig":"40"},{"size":2240,"mtime":1671645997255,"results":"75","hashOfConfig":"40"},{"size":961,"mtime":1670704116860,"results":"76","hashOfConfig":"40"},{"size":1165,"mtime":1671591869119,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s6e1m7",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\api\\index.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\Layout.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\Popups.tsx",["197"],[],"// dependencies\r\nimport { useEffect, useState, useRef, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\n// context\r\nimport PopupContext from \"common/context/PopupContext\";\r\n\r\nconst PopupContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: blue;\r\n  width: 400px;\r\n  margin-top: 40px;\r\n  z-index: 1066;\r\n`;\r\n\r\nconst PopupCard = styled.article`\r\n  background-color: #fff;\r\n  height: 150px;\r\n  padding: .5rem;\r\n`;\r\n\r\ninterface Props {\r\n  title: string,\r\n  text: string\r\n}\r\n\r\nconst Popup = ({ title, text }: Props) => {\r\n  const [timeoutForClose, setTimeoutForClose] = useState<ReturnType<typeof setTimeout>>();\r\n  const ref = useRef<HTMLDivElement>();\r\n\r\n  const handleRemove = () => {\r\n    ref.current?.remove();\r\n  };\r\n\r\n  // inicia o tempo para o popup ser destruido\r\n  const initTimeoutForClose = () => {\r\n    const timeout = setTimeout(() => {\r\n      handleRemove();\r\n    }, 5000);\r\n\r\n    setTimeoutForClose(timeout);\r\n  };\r\n\r\n  // para o tempo para o popup ser destruido\r\n  const stopTimeoutForClose = () => {\r\n    clearTimeout(timeoutForClose);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initTimeoutForClose();\r\n\r\n    return () => {\r\n      stopTimeoutForClose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <PopupCard \r\n      ref={ref} \r\n      className=\"border shadow-lg\" \r\n      onMouseOver={stopTimeoutForClose} \r\n      onMouseLeave={initTimeoutForClose}\r\n    >\r\n      <div className=\"flex justify-end\">\r\n        <button onClick={handleRemove}>\r\n          <IoClose size={24} />\r\n        </button>\r\n      </div>\r\n      <h5>{title}</h5>\r\n      <p className=\"w-full whitespace-normal break-normal\">{text}</p>\r\n    </PopupCard>\r\n  )\r\n};\r\n\r\nconst Popups = () => {\r\n  const { popups } = useContext(PopupContext);\r\n\r\n  if (!popups.length)\r\n    return <></>;\r\n\r\n  return (\r\n    <PopupContainer>\r\n      {\r\n        popups.map((popup, i) => (\r\n          <Popup key={i} {...popup} />\r\n        ))\r\n      }\r\n    </PopupContainer>\r\n  );\r\n};\r\n\r\nexport default Popups;","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\ResizableImage.tsx",["198"],[],"// dependencies\r\nimport { useContext } from 'react';\r\nimport { MouseEvent } from 'react';\r\n\r\n// components\r\nimport { ResizableBox } from 'react-resizable';\r\nimport { IoResize, IoClose } from 'react-icons/io5';\r\n\r\nimport SimulatorContext from 'common/context/SimulatorContext';\r\n\r\n// interfaces\r\nimport { Image as ImageInterface } from 'interfaces'\r\n\r\nimport Image from 'next/image'\r\n\r\ninterface Props {\r\n    image: ImageInterface,\r\n    remove: () => void\r\n};\r\n\r\nconst ResizableImage = ({ image, remove }: Props) => {\r\n\r\n    // funções usadas para a lógica de posicionamento da imagem (ainda bugado no mobile)\r\n    const handleMove = (evt: MouseEvent) => {\r\n        const currentTarget = evt.currentTarget as HTMLDivElement;\r\n        const offset = [\r\n          currentTarget.offsetLeft - evt.clientX,\r\n          currentTarget.offsetTop - evt.clientY\r\n        ];\r\n\r\n        currentTarget.style.left = (offset[0]) + 'px';\r\n        currentTarget.style.top = (offset[1]) + 'px';\r\n    };\r\n\r\n    const handleMouseDown = (evt: MouseEvent) => {\r\n        const currentTarget = evt.currentTarget as HTMLDivElement;\r\n        const target = evt.target as HTMLElement;\r\n\r\n        if (target.matches('button') || target.matches('svg'))\r\n          return;\r\n\r\n        const offset = [\r\n          currentTarget.offsetLeft - evt.clientX,\r\n          currentTarget.offsetTop - evt.clientY\r\n        ];\r\n\r\n        currentTarget.classList.add('grabbing');\r\n        currentTarget.onmousemove = (evt): any => {\r\n  \r\n          currentTarget.style.left = (evt.clientX + offset[0]) + 'px';\r\n          currentTarget.style.top = (evt.clientY + offset[1]) + 'px';\r\n      };\r\n    };\r\n\r\n    const handleMouseUp = (evt: MouseEvent) => {\r\n        const target = evt.currentTarget as HTMLDivElement;\r\n        target.classList.remove('grabbing');\r\n\r\n        target.onmousemove = null;\r\n    }\r\n\r\n    // compatibilidade com mobile\r\n    const handleTouchMove = (evt: TouchEvent) => {\r\n      const currentTarget = evt.currentTarget as HTMLDivElement;\r\n      const offset = [\r\n        currentTarget.offsetLeft - evt.touches[0].clientX,\r\n        currentTarget.offsetTop - evt.touches[0].clientY,\r\n      ];\r\n\r\n      console.log(evt.touches[0].clientX)\r\n\r\n      currentTarget.style.left = (evt.touches[0].clientX + offset[0]) + 'px';\r\n      currentTarget.style.top = (evt.touches[0].clientY + offset[1]) + 'px';\r\n  };\r\n\r\n    const handleTouchStart = (evt: TouchEvent) => {\r\n        console.log('touch');\r\n        const currentTarget = evt.currentTarget as HTMLDivElement;\r\n        const target = evt.target as HTMLElement;\r\n\r\n        if (target.matches('button') || target.matches('svg'))\r\n          return;\r\n\r\n        const offset = [\r\n          currentTarget.offsetLeft - evt.touches[0].clientX,\r\n          currentTarget.offsetTop - evt.touches[0].clientY,\r\n        ];\r\n\r\n        currentTarget.classList.add('grabbing');\r\n\r\n        currentTarget.ontouchmove = (evt: TouchEvent) => {\r\n    \r\n          currentTarget.style.left = (evt.touches[0].clientX + offset[0]) + 'px';\r\n          currentTarget.style.top = (evt.touches[0].clientY + offset[1]) + 'px';\r\n        };\r\n    };\r\n\r\n    const handleTouchEnd = (evt: TouchEvent) => {\r\n        const target = evt.currentTarget as HTMLDivElement;\r\n        target.classList.remove('grabbing');\r\n\r\n        target.ontouchmove = null;\r\n    };\r\n  \r\n    return (\r\n      <ResizableBox \r\n        axis=\"x\"\r\n        handle={\r\n          <button \r\n            className=\"flex justify-center items-center p-0 bg-white border-0 rounded-full right-0 bottom-0\"\r\n            style={{\r\n              width: 25,\r\n              height: 25,\r\n              cursor: 'nwse-resize'\r\n            }}\r\n          >\r\n            <IoResize style={{ transform: 'scaleX(-1)' }} />\r\n          </button>\r\n        }\r\n        width={150}\r\n        className=\"image-overlay absolute p-3\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseUp={handleMouseUp}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchEnd={handleTouchEnd}\r\n      >\r\n        <button \r\n          className=\"flex justify-center items-center bg-red-600 border-0 rounded-full text-white top-0 right-0 p-0\"\r\n          style={{\r\n            width: 25,\r\n            height: 25\r\n          }}\r\n          onClick={remove}\r\n        >\r\n          <IoClose />\r\n        </button>\r\n        <img src={image.src} alt=\"Imagem\" draggable=\"false\" />\r\n      </ResizableBox>\r\n    )\r\n};\r\n\r\nexport default ResizableImage;","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\CartContext.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\index.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\LoaderContext.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\ModalContext.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\PopupContext.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\context\\SimulatorContext.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\components\\Dropzone.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\components\\Footer.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\components\\Header.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\CartItem.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Image.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\index.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Popup.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Simulator.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\interfaces\\Template.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Cart\\components\\CartModal.tsx",["199"],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Cart\\components\\Form.tsx",["200","201"],[],"import { useState, useEffect, useContext, FormEvent, ChangeEvent } from 'react';\r\nimport { MutatorCallback } from 'swr';\r\nimport api from 'api';\r\nimport styled from 'styled-components';\r\n\r\n// icons\r\nimport { AiOutlineWhatsApp, AiOutlineMail, AiOutlineCalendar } from 'react-icons/ai';\r\nimport { BsPerson } from 'react-icons/bs';\r\nimport { IoMdBusiness } from 'react-icons/io';\r\nimport { RiCoupon3Line } from 'react-icons/ri';\r\n\r\n// context\r\nimport { LoaderContext, PopupContext } from 'common/context';\r\nimport { AxiosError } from 'axios';\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: .5rem;\r\n  width: 100%;\r\n\r\n  input {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\ninterface FormInterface {\r\n    cpf: string,\r\n    cnpj: string,\r\n    email: string,\r\n    whatsapp: string,\r\n    birthdate: string,\r\n    discountCoupon: string,\r\n    [key: string]: string\r\n}\r\n\r\ninterface FormRegex {\r\n    email: RegExp,\r\n    whatsapp: RegExp,\r\n    birthdate: RegExp,\r\n    cpf: RegExp,\r\n    cnpj: RegExp,\r\n    [key: string]: any\r\n}\r\n\r\ninterface Props {\r\n    saveItems: () => void,\r\n    mutateData?: MutatorCallback\r\n}\r\n\r\nconst Form = ({ mutateData, saveItems }: Props) => {\r\n    const formDefaults: FormInterface = {\r\n        cpf: '',\r\n        cnpj: '',\r\n        email: '',\r\n        whatsapp: '',\r\n        birthdate: '',\r\n        discountCoupon: ''\r\n    };\r\n\r\n    // validação para o formulário\r\n    const regex: FormRegex = {\r\n        email: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\r\n        whatsapp: /^\\d{11}$/,\r\n        birthdate: /^\\d{4}-\\d{2}-\\d{2}$/,\r\n        cpf: /^\\d{11}$/,\r\n        cnpj: /^\\d{14}$/\r\n    };\r\n\r\n    // 0 para pessoa física, 1 para pessoa jurírica\r\n    const [formType, setFormType] = useState<1 | 0>(0);\r\n    const [form, setForm] = useState<FormInterface>(formDefaults);\r\n    const [canSubmit, setCanSubmit] = useState<boolean>(false);\r\n\r\n    const { setIsLoading } = useContext(LoaderContext);\r\n    const { dispatchPopup } = useContext(PopupContext);\r\n\r\n    // funções de mascara\r\n    const handleCpfMask = (value: string) => {\r\n        if (!value) return '';\r\n        let mask = value.replaceAll(/\\D/g, '');\r\n        mask = mask.replace(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/g, \"$1.$2.$3-$4\");\r\n        return mask;\r\n    };\r\n\r\n    const handleCnpjMask = (value: string) => {\r\n        if (!value) return '';\r\n        let mask = value.replaceAll(/\\D/g, '');\r\n        mask = mask.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/g, \"$1.$2.$3.$4-$5\");\r\n        return mask;\r\n    }\r\n\r\n    const handleWhatsappNumberMask = (value: string) => {\r\n        if (!value) return '';\r\n        let mask = value.replaceAll(/\\D/g, '');\r\n        mask = mask.replace(/^(\\d{2})(\\d{1})(\\d{4})(\\d{4})$/g, \"$1 $2 $3-$4\");\r\n        return mask;\r\n    };\r\n\r\n    // controla o valor de um input simples\r\n    const handleInputChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n        const target = evt.target;\r\n\r\n        setForm({\r\n        ...form,\r\n        [evt.target.name]: target.value\r\n        });\r\n    };\r\n\r\n    // controla o valor de um input que precisa de validação\r\n    const handleValidableInputChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n        const target = evt.target;\r\n        \r\n        if (regex[target.name].test(target.value)) {\r\n            target.classList.add('is-valid');\r\n            target.classList.remove('is-invalid');\r\n        } else {\r\n            target.classList.remove('is-valid');\r\n            target.classList.add('is-invalid');\r\n        }\r\n        \r\n        handleInputChange(evt);\r\n    };\r\n\r\n    // valida todos os campos\r\n    const validateFields = () => {\r\n        for (let key in form) {\r\n        \r\n        if (form[key] && key !== 'discountCoupon')\r\n            if (regex[key] && !regex[key].test(form[key]))\r\n            return setCanSubmit(false);\r\n        }\r\n        setCanSubmit(true);\r\n    };\r\n\r\n    const handleSubmit = async (evt: FormEvent) => {\r\n        evt.preventDefault();\r\n\r\n        // filtro para não enviar campos nulos ou vazios\r\n        for (let key in form) {\r\n            if (!form[key]) {\r\n                delete form[key];\r\n            }\r\n        }\r\n    \r\n        try {\r\n          setIsLoading(true);\r\n          saveItems();\r\n          const { data } = await api.post('budgets', form);\r\n          \r\n          dispatchPopup('Sucesso', data.message);\r\n          setForm(formDefaults);\r\n        } catch (err: unknown) {\r\n            if (err instanceof AxiosError) {\r\n                dispatchPopup('Erro', err.response?.data.message);\r\n            }\r\n        }\r\n        setIsLoading(false);\r\n    \r\n        mutateData && mutateData();\r\n    };\r\n\r\n    useEffect(() => {\r\n        // valida todos os campos assim que o formulário muda\r\n        console.log(form)\r\n        validateFields();\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n        // deleta propriedades quando o tipo do formulário é mudado\r\n        if (!formType) {\r\n          form.cnpj = '';\r\n        } else {\r\n          form.cpf = '';\r\n          form.birthdate = '';\r\n        }\r\n    }, [formType]);\r\n\r\n    return (\r\n        <form className='flex flex-col gap-3 mt-5' onSubmit={handleSubmit}>\r\n            <div className=\"flex justify-between md:justify-start md:gap-3\">\r\n                <button \r\n                    type=\"button\"\r\n                    className={`border border-neutral-800 ${formType ? 'bg-transparent' : 'bg-neutral-800 text-white'} p-2`}\r\n                    onClick={() => setFormType(0)}\r\n                >\r\n                    Pessoa física\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    className={`border border-neutral-800 ${!formType ? 'bg-transparent' : 'bg-neutral-800 text-white'} p-2`}\r\n                    onClick={() => setFormType(1)}\r\n                >\r\n                    Pessoa jurídica\r\n                </button>\r\n            </div>\r\n            <small className=\"text-gray-600\">Seus dados são importantes para podermos identificar você no sistema!</small>\r\n            {\r\n            !formType ?\r\n            <div className=\"flex flex-col md:flex-row gap-3\">\r\n                <Label>\r\n                    <BsPerson size={24} />\r\n                    <div>\r\n                        <small className=\"text-gray-600\">CPF *</small>\r\n                        <input \r\n                            name=\"cpf\"\r\n                            type=\"text\"\r\n                            className=\"border-0 border-b focus:ring-0 focus:border-gray-600\"\r\n                            placeholder=\"000.000.000-00\" \r\n                            autoComplete=\"off\"\r\n                            value={handleCpfMask(form.cpf)}\r\n                            onChange={handleValidableInputChange}\r\n                        />\r\n                    </div>\r\n                </Label>\r\n                <Label>\r\n                    <AiOutlineCalendar size={24} />\r\n                    <div>\r\n                        <small className='text-gray-600'>Data de nascimento *</small>\r\n                        <input \r\n                            name=\"birthdate\"\r\n                            type=\"date\"\r\n                            className=\"border-0 border-b focus:ring-0 focus:border-gray-600\" \r\n                            placeholder=\"Data de nascimento *\" \r\n                            autoComplete=\"off\"\r\n                            value={form.birthdate}\r\n                            onChange={handleValidableInputChange}\r\n                        />\r\n                    </div>\r\n                </Label>\r\n            </div> :\r\n            <Label>\r\n                <IoMdBusiness size={24} />\r\n                <div className=\"w-full\">\r\n                    <small className=\"text-gray-600\">CNPJ *</small>\r\n                    <input \r\n                        name=\"cnpj\"\r\n                        type=\"text\"\r\n                        className=\"border-0 border-b focus:ring-0 focus:border-gray-600\"\r\n                        autoComplete=\"off\"\r\n                        placeholder='00.000.000.0000-00'\r\n                        value={handleCnpjMask(form.cnpj)}\r\n                        onChange={handleValidableInputChange} \r\n                    />\r\n                </div>\r\n            </Label>\r\n            }\r\n\r\n            <div className=\"flex flex-col md:flex-row gap-3\">\r\n            <Label>\r\n                <AiOutlineMail size={24} />\r\n                <div>\r\n                    <small className='text-gray-600'>E-mail *</small>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        className=\"border-0 border-b focus:ring-0 focus:border-gray-600\" \r\n                        placeholder=\"exemplo@gmail.com\" \r\n                        autoComplete=\"off\"\r\n                        value={form.email}\r\n                        onChange={handleValidableInputChange}\r\n                    />\r\n                </div>\r\n            </Label>\r\n            <Label>\r\n                <AiOutlineWhatsApp size={24} />\r\n                <div>\r\n                    <small className='text-gray-600'>Whatsapp (com DDD) *</small>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"whatsapp\"\r\n                        className=\"border-0 border-b focus:ring-0 focus:border-gray-600\"\r\n                        placeholder=\"00 0 0000-0000\" \r\n                        autoComplete=\"off\"\r\n                        value={handleWhatsappNumberMask(form.whatsapp)}\r\n                        onChange={handleValidableInputChange}\r\n                    />\r\n                </div>\r\n            </Label>\r\n            </div>\r\n\r\n            <Label>\r\n                <RiCoupon3Line size={24} />\r\n                <div>\r\n                    <small>Cupom de desconto (opcional):</small>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"discountCoupon\" \r\n                        className=\"border-0 border-b focus:ring-0 focus:border-gray-600\"\r\n                        placeholder='Ex: CUPOM100' \r\n                        autoComplete='off'\r\n                        value={form.discountCoupon}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n            </Label>\r\n\r\n            <button \r\n                type=\"submit\"\r\n                className=\"bg-amber-300 p-3 rounded self-end\"\r\n                disabled={!canSubmit}\r\n            >\r\n                Pedir orçamento\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\index\\components\\Depositions.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\index\\components\\Landing.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\index\\components\\Statistics.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\Colors.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\ImageUpload.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\Menu.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\Templates.tsx",["202"],[],"// dependencies\r\nimport { useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport api, { useApi, baseUrl } from \"api\";\r\n\r\n// context\r\nimport { SimulatorContext, LoaderContext } from 'common/context';\r\n\r\n// interface\r\nimport { Template } from \"interfaces\";\r\n\r\n// utils\r\nimport { selectTemplate } from \"utils\";\r\n\r\nconst TemplateItem = styled.div`\r\n  :hover {\r\n    background-color: #f8f9fa;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  templates: Template[]\r\n}\r\n\r\nconst Templates = ({ templates }: Props) => {\r\n  //const { data: templates, error } = useApi<Template[]>('templates');\r\n  const { setContext: setSimulatorContext } = useContext(SimulatorContext);\r\n  const { setIsLoading } = useContext(LoaderContext);\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"mb-3\">\r\n        <strong>Modelos</strong>\r\n      </h5>\r\n      <div className=\"grid grid-cols-2 mx-12 gx-0 gap-3 justify-center\" style={{ overflowY: 'scroll' }}>\r\n        {\r\n          templates?.map((template) => (\r\n            <TemplateItem \r\n              className=\"text-center p-2 rounded\"\r\n              key={template.id}\r\n              onClick={() => selectTemplate(template, setIsLoading, setSimulatorContext)}\r\n            >\r\n              <img className=\"inline mb-3\" style={{ height: '100px' }} src={`${baseUrl}/${template.mockup_front}`} alt=\"\" />\r\n              <p style={{ lineHeight: 1.2 }}>\r\n                <small className=\"mt-2 uppercase\">{template.name}</small>\r\n              </p>\r\n            </TemplateItem>\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Templates;","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Menu\\components\\UploadConfirmationModal.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Simulador\\components\\ResetChangesModal.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\modules\\Simulador\\components\\TemplateContainer.tsx",["203","204","205"],[],"// dependencies\r\nimport { useEffect, useContext, useState, useMemo } from \"react\";\r\nimport { baseUrl } from \"api\";\r\nimport SVG from 'react-inlinesvg';\r\nimport styled from \"styled-components\";\r\n\r\nimport { FiRotateCw } from 'react-icons/fi'\r\n\r\n// context\r\nimport { SimulatorContext } from \"common/context\";\r\n\r\n// components\r\nimport ResizableImage from \"common/components/ResizableImage\";\r\nimport ResetChangesModal from \"./ResetChangesModal\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  border-radius: .25rem;\r\n  padding: .5rem;\r\n\r\n  .template-img, .template-svg {\r\n    width: 300px;\r\n  }\r\n\r\n  .template-svg {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    pointer-events: none;\r\n    mix-blend-mode: multiply;\r\n  }\r\n\r\n  .image-overlay {\r\n    position: absolute;\r\n    width: 150px;\r\n    cursor: grab;\r\n\r\n    &.grabbing{\r\n      cursor: grabbing;\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n\r\n    button {\r\n      position: absolute;\r\n      visibility: hidden;\r\n    }\r\n\r\n    :hover {\r\n      \r\n      button {\r\n        visibility: visible;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TemplateContainer = () => {\r\n  const [side, setSide] = useState('front');\r\n  const [resetChangesModalShow, setResetChangesModalShow] = useState(false);\r\n  const { context: simulatorContext, setContext: setSimulatorContext } = useContext(SimulatorContext);\r\n  const { front, back } = simulatorContext.currentTemplateRefs;\r\n\r\n  const removeImage = (side: string, id: number) => {\r\n    const images = simulatorContext.images[side].filter(img => img.id !== id);\r\n\r\n    setSimulatorContext(state => ({\r\n      ...state,\r\n      images: {\r\n        ...state.images,\r\n        [side]: images\r\n      }\r\n    }));\r\n  };\r\n  \r\n  // handles color apply\r\n  useEffect(() => {\r\n    if (simulatorContext.currentTemplate) {\r\n      front?.current &&\r\n      Array.from(front.current/*.contentDocument?*/.querySelectorAll('path'))\r\n      .forEach((path, i) => {\r\n        path.style.fill = simulatorContext.colors[i] || '#fff'; \r\n      });\r\n\r\n      back?.current &&\r\n      Array.from(back.current/*.contentDocument?*/.querySelectorAll('path'))\r\n      .forEach((path, i) => {\r\n        path.style.fill = simulatorContext?.colors[i] || '#fff';\r\n      });\r\n    }\r\n\r\n  }, [simulatorContext.colors]);\r\n\r\n  if (!simulatorContext.currentTemplate)\r\n  return (\r\n    <h4 className=\"text-gray-400 mx-12\">Selecione um modelo para começar.</h4>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container id=\"template-container\" className=\"flex\">\r\n        <div style={{ minWidth: 275, height: 400 }} className={`templateFront ${side !== 'front' ? 'hide-on-tablet' : ''}`}>\r\n          <div className=\"relative text-center flex-grow\">\r\n            \r\n            <img className='template-img' src={`${baseUrl}/${simulatorContext.currentTemplate?.mockup_front}`} alt=\"\" tabIndex={-1} />\r\n            {\r\n              simulatorContext.currentTemplate?.overlay_front &&\r\n              <SVG className=\"template-svg\" src={`${baseUrl}/${simulatorContext.currentTemplate?.overlay_front}`} innerRef={front}/>\r\n            }\r\n            <div\r\n              className=\"absolute top-0 w-full h-full\"\r\n              style={{\r\n                WebkitMaskImage: `url(${baseUrl}/${simulatorContext.currentTemplate?.mockup_front})`,\r\n                WebkitMaskSize: '100%'\r\n              }}\r\n            >\r\n              {\r\n                simulatorContext.images.front.map((image) => (\r\n                  <ResizableImage \r\n                    key={image.id}\r\n                    image={image} \r\n                    remove={() => removeImage('front', image.id)}\r\n                  />\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className='flex justify-center' data-html2canvas-ignore>\r\n            <div className='bg-amber-300 rounded-full py-2 px-5 mt-3'>\r\n              <strong>Frente</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ minWidth: 275, height: 400 }} className={`templateBack ${side !== 'back' ? 'hide-on-tablet' : ''}`}>\r\n          <div className=\"relative text-center flex-grow\">\r\n            \r\n            <img className='template-img' src={`${baseUrl}/${simulatorContext.currentTemplate?.mockup_back}`} alt=\"\" tabIndex={-1} />\r\n            {\r\n              simulatorContext.currentTemplate?.overlay_back &&\r\n              <SVG className=\"template-svg\" src={`${baseUrl}/${simulatorContext.currentTemplate?.overlay_back}`} innerRef={back}/>\r\n            }\r\n            <div\r\n              className=\"absolute top-0 w-full h-full\"\r\n              style={{\r\n                WebkitMaskImage: `url(${baseUrl}/${simulatorContext.currentTemplate?.mockup_back})`,\r\n                WebkitMaskSize: '100%'\r\n              }}\r\n            >\r\n              {\r\n                simulatorContext.images.back.map((image) => (\r\n                  <ResizableImage \r\n                    key={image.id}\r\n                    image={image}\r\n                    remove={() => removeImage('back', image.id)}\r\n                  />\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className='flex justify-center' data-html2canvas-ignore>\r\n            <div className='bg-amber-300 rounded-full py-2 px-5 mt-3'>\r\n              <strong>Costas</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      \r\n      <div className=\"flex gap-3 justify-center\">\r\n        <ResetChangesModal show={resetChangesModalShow} setShow={setResetChangesModalShow} />\r\n        <button \r\n          className=\"bg-red-600 p-3 rounded-full text-white font-bold\"\r\n          onClick={() => setResetChangesModalShow(true)}\r\n        >\r\n          Resetar alterações\r\n        </button>\r\n        <button \r\n          className=\"bg-gray-600 rounded-full p-4\"\r\n          onClick={() => setSide(state => state === 'front' ? 'back' : 'front')}\r\n        >\r\n          <FiRotateCw className=\"text-white\" />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateContainer;","C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\contato.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\index.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\produtos.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\simulador.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\pages\\_app.tsx",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\utils\\index.ts",[],[],"C:\\Users\\kuram\\Desktop\\monster-physique\\frontend\\src\\common\\components\\Dropdown.tsx",[],[],{"ruleId":"206","severity":1,"message":"207","line":59,"column":6,"nodeType":"208","endLine":59,"endColumn":8,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":137,"column":9,"nodeType":"212","endLine":137,"endColumn":63},{"ruleId":"210","severity":1,"message":"211","line":109,"column":31,"nodeType":"212","endLine":113,"endColumn":33},{"ruleId":"206","severity":1,"message":"213","line":167,"column":8,"nodeType":"208","endLine":167,"endColumn":14,"suggestions":"214"},{"ruleId":"206","severity":1,"message":"215","line":177,"column":8,"nodeType":"208","endLine":177,"endColumn":18,"suggestions":"216"},{"ruleId":"210","severity":1,"message":"211","line":44,"column":15,"nodeType":"212","endLine":44,"endColumn":125},{"ruleId":"206","severity":1,"message":"217","line":95,"column":6,"nodeType":"208","endLine":95,"endColumn":31,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"211","line":108,"column":13,"nodeType":"212","endLine":108,"endColumn":135},{"ruleId":"210","severity":1,"message":"211","line":140,"column":13,"nodeType":"212","endLine":140,"endColumn":134},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initTimeoutForClose' and 'stopTimeoutForClose'. Either include them or remove the dependency array.","ArrayExpression",["219"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'validateFields'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'back', 'front', and 'simulatorContext.currentTemplate'. Either include them or remove the dependency array.",["222"],{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [initTimeoutForClose, stopTimeoutForClose]",{"range":"231","text":"232"},"Update the dependencies array to be: [form, validateFields]",{"range":"233","text":"234"},"Update the dependencies array to be: [form, formType]",{"range":"235","text":"236"},"Update the dependencies array to be: [back, front, simulatorContext.colors, simulatorContext.currentTemplate]",{"range":"237","text":"238"},[1300,1302],"[initTimeoutForClose, stopTimeoutForClose]",[4850,4856],"[form, validateFields]",[5101,5111],"[form, formType]",[2244,2269],"[back, front, simulatorContext.colors, simulatorContext.currentTemplate]"]